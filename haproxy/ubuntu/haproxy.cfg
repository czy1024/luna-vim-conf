
global
		log         127.0.0.1 local2 info 	  #日志以local2形式的info级别记录在本机	
		chroot      /var/lib/haproxy    #锁定运行目录
		pidfile     /run/haproxy.pid 
		maxconn     4096                      #每个haproxy进程的最大并发连接数,要考虑到ulimit -n的大小限制
		user        root                      #运行haproxy的用户
		group       root                      #运行haproxy的用户组
		daemon								  #守护进程
		#nbproc 2                 			  #开启的haproxy进程数，与CPU保持一致
		#maxsslconn  100000        			  #SSL每个haproxy进程ssl最大连接数
		maxconnrate  100000        		      #每个进程每秒最大连接数
		spread-checks  3           			  #后端server状态check随机提前或延迟百分比时间，建议2-5(20%-50%)之间

defaults
        log 		127.0.0.1 local0 err #[err warning info debug]
        mode 		http                 #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
        retries		2                	 #两次连接失败就认为是服务器不可用，也可以通过后面设置
        option 		redispatch        	 #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器
        option 		abortonclose         #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接
        option 		dontlognull       		 #日志中不记录负载均衡的心跳检测记录
        maxconn 	4096             		 #默认的最大连接数
        timeout 	connect 5000ms   		 #连接超时
        timeout 	client 30000ms   		 #客户端超时
        timeout 	server 30000ms   		 #服务器超时
        #timeout check 2000      		 #=心跳检测超时
		errorfile 400 /etc/haproxy/errors/400.http
		errorfile 403 /etc/haproxy/errors/403.http
		errorfile 408 /etc/haproxy/errors/408.http
		errorfile 500 /etc/haproxy/errors/500.http
		errorfile 502 /etc/haproxy/errors/502.http
		errorfile 503 /etc/haproxy/errors/503.http
		errorfile 504 /etc/haproxy/errors/504.http
########统计页面配置########  
listen admin_status  
		bind 0.0.0.0:8084                #监听端口  
		mode http                        #http的7层模式  
		option httplog                   #采用http日志格式  
		maxconn 10  
		stats refresh 30s                #统计页面自动刷新时间  
		stats uri /stats                 #统计页面url  
		stats realm Haproxy \ statistic  #统计页面密码框上提示文本  
		stats auth admin:admin           #统计页面用户名和密码设置  
		stats hide-version               #隐藏统计页面上HAProxy的版本信息  

listen luna-http-1
       	bind 	0.0.0.0:8082
        mode 	http
		log		global					# 日志存储
		option	httplog					# 日志类型
		option 	httpclose				# 每次请求完成后请求后关闭连接
		acl html url_reg -i \.html$ 	# html 正则匹配以html结尾的内容
		use_backend luna-server if html #如果匹配到了html 使用html-server
        default_backend luna-server	

listen luna-http-2
       	bind 	0.0.0.0:8083
        mode 	http
		log		global					# 日志存储
		option	httplog					# 日志类型
		option 	httpclose				# 每次请求完成后请求后关闭连接
		acl html url_reg -i \.html$ 	# html 正则匹配以html结尾的内容
		use_backend luna-server if html #如果匹配到了html 使用html-server
        default_backend luna-server	


backend luna-server						# 真实服务器位置
		mode http						# http模式
		balance roundrobin 				# 使用轮询算法
		option httpchk GET /index.html  # 结合前面到健康检查
       	cookie SERVERID insert indirect nocache # 插入服务器id到用户请求
		server luna-node-I 192.168.1.106:80 weight 1 cookie 3 check inter 2000 rise 2 fall 5
		server luna-node-II 192.168.1.106:80 weight 1 cookie 3 check inter 2000 rise 2 fall 5

